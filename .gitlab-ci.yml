stages:
  - lint
  - coverage
  - test
  - build
  - deploy

cache:
  paths:
    - .cache/pip
    - .nox/
    - dev/frontend/node_modules

image: python:3.10-slim

.job_template: &job_template
  before_script: &before_script
    - python -V
    - pip install -U nox
  only:
    - main
    - /^group_\d\/dev$/

format:
  stage: lint
  <<: *job_template
  script:
    - nox -s format

deadcode:
  stage: lint
  <<: *job_template
  script:
    - nox -s deadcode

lint:
  stage: lint
  <<: *job_template
  script:
    - nox -s lint

security:
  stage: lint
  <<: *job_template
  script:
    - nox -s security

metrics:
  stage: coverage
  <<: *job_template
  script:
    - nox -s metrics

coverage:
  stage: coverage
  <<: *job_template
  script:
    - nox -s coverage

test:
  stage: test
  <<: *job_template
  script:
    - nox -s test

build_backend:
  image: docker:20.10.16
  stage: deploy
  only:
    - tags
  services:
    - docker:20.10.16-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - cd dev/backend
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "Building $IMAGE_TAG -- $CI_COMMIT_TAG_MESSAGE"
    - docker build -t latest -t $IMAGE_TAG .
    - docker push -a $CI_REGISTRY_IMAGE

pages:
  image: node
  stage: deploy
  before_script:
    - cd dev/frontend
    - npm i
  only:
    - tags
  script:
    - npm run build
    - mv -f build/ ../../public/
  artifacts:
    paths:
      - public
